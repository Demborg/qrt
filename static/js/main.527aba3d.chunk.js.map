{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Video","props","videoRef","React","createRef","video","this","current","navigator","mediaDevices","getUserMedia","then","mediaStream","srcObject","onloadedmetadata","e","play","catch","err","console","log","name","message","autoPlay","ref","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAQMA,G,wDAGJ,WAAYC,GAAoB,IAAD,8BAC7B,cAAMA,IAFRC,SAAWC,IAAMC,YACc,E,gEAK7B,IACIC,EAAQC,KAAKJ,SAASK,QAC1BC,UAAUC,aACPC,aAHe,CAACL,OAAO,IAIvBM,MAAK,SAASC,GACTP,IACFA,EAAMQ,UAAYD,EAClBP,EAAMS,iBAAmB,SAASC,GAC5BV,GACFA,EAAMW,YAKbC,OAAM,SAASC,GACdC,QAAQC,IAAIF,EAAIG,KAAO,KAAOH,EAAII,c,+BAKtC,OACE,8BACE,uBAAOC,UAAU,EAAMC,IAAKlB,KAAKJ,iB,GA9BrBC,IAAMsB,YA6CXC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OClCSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.527aba3d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\ninterface VideoProps { \n}\ninterface VideoState { \n}\n\nclass Video extends React.Component<VideoProps, VideoState> {\n\n  videoRef = React.createRef<HTMLVideoElement>()\n  constructor(props: VideoProps) {\n    super(props)\n  }\n\n  componentDidMount() {\n    var constraints = {video: true}\n    let video = this.videoRef.current \n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(function(mediaStream) {\n        if (video) {\n          video.srcObject = mediaStream;\n          video.onloadedmetadata = function(e) {\n            if (video) {\n              video.play()\n            }\n          }\n        }\n      })\n      .catch(function(err) {\n        console.log(err.name + \": \" + err.message);\n      }); // always check for errors at the end.\n  }\n\n  render() {\n    return (\n      <div>\n        <video autoPlay={true} ref={this.videoRef}></video>\n      </div>\n    );\n  }\n\n}\n\nfunction App() {\n  return (\n    <div>\n      <Video/>\n    </div>\n  )\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}